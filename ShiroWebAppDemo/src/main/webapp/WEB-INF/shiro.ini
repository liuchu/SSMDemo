#
# Copyright (c) 2013 Les Hazlewood and contributors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# INI configuration is very powerful and flexible, while still remaining succinct.
# Please http://shiro.apache.org/configuration.html and
# http://shiro.apache.org/web.html for more.

[main]

shiro.loginUrl = /login.jsp
#authc.successUrl = /index.jsp

#声明一个realm
loginRealm= realm.AuthenticationRealm
#指定securityManager的realms实现,通过$name来指定realm
securityManager.realms=$loginRealm

#dateSource
#↓ 使用 JdbcRealm 作为当前验证的Realm
#jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
#↓ 使用druid数据源
#dataSource=com.alibaba.druid.pool.DruidDataSource
#↓ MySQL驱动
#dataSource.driverClassName=com.mysql.jdbc.Driver
#↓ MySQL相关参数配置
#dataSource.url=jdbc:mysql://localhost:3306/demo
#dataSource.username=chuliu
#dataSource.password=chuliu
#↓ 引入相关数据配置
#jdbcRealm.dataSource=$dataSource
#↓这里是默认的sql查询语句，可以自己设定，但参数不能修改，只有一个，且相对应。
#jdbcRealm.authenticationQuery = select password from users where username = ?
#jdbcRealm.userRolesQuery = select role_name from user_roles where username = ?
#jdbcRealm.permissionsQuery = select permission from roles_permissions where role_name = ?
#↓是否
#jdbcRealm.permissionsLookupEnabled = false
#saltStyle =NO_SALT ,  CRYPT,  COLUMN,  EXTERNAL;
#jdbcRealm.saltStyle = COLUMN
#securityManager.realms=$jdbcRealm

# Let's use some in-memory caching to reduce the number of runtime lookups against Stormpath.  A real
# application might want to use a more robust caching solution (e.g. ehcache or a distributed cache).  When using such
# caches, be aware of your cache TTL settings: too high a TTL and the cache won't reflect any potential
# changes in Stormpath fast enough.  Too low and the cache could evict too often, reducing performance.
cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $cacheManager


[urls]
/login.jsp = anon
/login_result.jsp = anon
#/index.jsp = anon

#authc: 该页面("index.jsp")需要通过验证，即通过了Real的认证，才能访问；当处于未登录状态时，访问该页面，会自动跳转到shiro.loginUrl(即login.jsp)
/index.jsp = authc

#authcBasic: 该页面需要通过HTTP Basic验证，才能访问。(会浏览器会有验证弹窗)。弹窗会一直存在，除非验证通过。
#需要注意(与shiro无关)，HTTP Baisc验证是基于浏览器的，即完成一次验证之后，在浏览器关闭之前，输入的认证信息会被浏览器记住，
#当再次访问该页面时，Shiro会用记住的认证信息自动执行一次login。(调用对用realm的doGetAuthenticationInfo()方法)
#/index.jsp = authcBasic

#/login.jsp = anon
#/logout = logout
#/account/** = authc


